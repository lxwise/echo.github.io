{"meta":{"title":"不曾留得桃花影","subtitle":null,"description":null,"author":"echo","url":"http://39.99.158.50","root":"/"},"pages":[{"title":"about","date":"2020-04-14T05:54:18.000Z","updated":"2020-04-14T07:35:39.212Z","comments":true,"path":"about/index.html","permalink":"http://39.99.158.50/about/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"categories","date":"2020-04-14T05:53:12.000Z","updated":"2020-04-14T05:53:12.899Z","comments":true,"path":"categories/index-1.html","permalink":"http://39.99.158.50/categories/index-1.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"categories","date":"2020-04-14T07:31:42.937Z","updated":"2020-04-14T07:31:42.937Z","comments":true,"path":"categories/index.html","permalink":"http://39.99.158.50/categories/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"contact","date":"2020-04-24T19:26:24.000Z","updated":"2020-04-24T19:26:24.219Z","comments":true,"path":"contact/index-1.html","permalink":"http://39.99.158.50/contact/index-1.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"contact","date":"2020-04-24T14:15:06.000Z","updated":"2020-04-24T14:15:49.876Z","comments":true,"path":"contact/index.html","permalink":"http://39.99.158.50/contact/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"friends","date":"2020-04-24T14:16:03.000Z","updated":"2020-04-24T14:16:18.841Z","comments":true,"path":"friends/index.html","permalink":"http://39.99.158.50/friends/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"tags","date":"2020-04-14T05:51:58.000Z","updated":"2020-04-14T05:51:58.386Z","comments":true,"path":"tags/index-1.html","permalink":"http://39.99.158.50/tags/index-1.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"Tags","date":"2020-04-14T07:36:01.558Z","updated":"2020-04-14T07:36:01.558Z","comments":false,"path":"tags/index.html","permalink":"http://39.99.158.50/tags/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"}],"posts":[{"title":"方法的重载和重写","slug":"方法的重载（Overload）和重写（override_overwrite）","date":"2018-11-09T01:54:08.000Z","updated":"2020-04-14T07:39:37.360Z","comments":true,"path":"2018/11/09/fang-fa-de-chong-zai-overload-he-chong-xie-override-overwrite/","link":"","permalink":"http://39.99.158.50/2018/11/09/fang-fa-de-chong-zai-overload-he-chong-xie-override-overwrite/","excerpt":"","text":"方法的重載（overload） loading… 1.定義：在同一个类中，允许存在一个以上的同名方法，只要它们的参数个数或者参数类型不同即可。简单的说就是“**同一个类中，方法名相同**！**方法的参数不同**” 2.举例如： //返回两个整数的和int add(int x,int y){return x+y;} //返回三个整数的和 int add(int x,int y,int z){return x+y+z;} 3.判断是否是重载 跟方法的权限修饰符，返回值类型，形参变量名，方法体都没关系 代码示例： public void getSum(int i,int j) { System.out.println(\"1\"); } public void getSum(double d1, double d2) { System.out.println(\"2\"); } public void getSum(String s,int i) { System.out.println(\"3\"); } 方法重写（override/overwrite）1.重写：子类继承父类以后，可以对父类中同名同参数的方法，进行覆盖操作 2.应用：重写以后，创建子类对象，通过子类对象调用子父类中同名同参数的方法时，实际调用的是子类中重写父类的方法。 3.重写的规定： 方法的声明：权限修饰符 返回值类型 方法名（形参列表） throws 异常类型{ //方法体 } 约定俗称：子类中的叫重写的方法，父类中的叫被重写的方法 ①子类重写的方法的方法名和形参列表与父类被重写的方法的方法名和形参列表相同 ②子类重写的方法的权限修饰符不小于父类被重写方法的权限修饰符 &gt;特殊情况：子类不能重写父类中声明为private权限的方法 ③返回值类型： &gt;父类被重写的方法的返回值类型是void，则子类重写的方法的返回值类型只能是void &gt;父类被重写的方法的返回值类型是A类型，则子类重写的方法的返回值类型可以是A类或A类的子类 &gt;父类被重写的方法的返回值类型是基本数据类型（比如int），则子类重写的方法的返回值类型必须是相同的基本数据类型（必须是int） ④ 子类重写的方法抛出的异常类型不大于父类被重写的方法抛出的异常类型 注：实际开发中如果想重写方法，可以直接把父类中的方法声明，复制到子类写方法体就行 特别注意：子类和父类的同名同参数的方法要么都声明为非static的（考虑重写），要么都声明为static的（静态的方法不能被重写） 代码示例:public class Person { String name; int age; public Person() { } public Person(String name,int age) { this.name = name; this.age = age; } public void eat() { System.out.println(\"吃飯\"); } /**/public class Student extends Person{ String major; public Student() { } public Student(String major) { this.major = major; } //对父类中的eat方法进行重写 public void eat() { System.out.println(\"多吃素菜！!\"); } document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"-java基础","slug":"java基础","permalink":"http://39.99.158.50/categories/java基础/"}],"tags":[{"name":"-java","slug":"java","permalink":"http://39.99.158.50/tags/java/"}]},{"title":"你好,Hexo","slug":"你好-Hexo","date":"2018-11-07T01:54:08.000Z","updated":"2020-04-14T07:37:36.987Z","comments":true,"path":"2018/11/07/ni-hao-hexo/","link":"","permalink":"http://39.99.158.50/2018/11/07/ni-hao-hexo/","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"-hexo","slug":"hexo","permalink":"http://39.99.158.50/categories/hexo/"}],"tags":[{"name":"-博客","slug":"博客","permalink":"http://39.99.158.50/tags/博客/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-11-07T01:37:55.802Z","updated":"2020-04-14T07:37:49.104Z","comments":true,"path":"2018/11/07/hello-world/","link":"","permalink":"http://39.99.158.50/2018/11/07/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"-hexo","slug":"hexo","permalink":"http://39.99.158.50/categories/hexo/"}],"tags":[{"name":"-博客","slug":"博客","permalink":"http://39.99.158.50/tags/博客/"}]}],"categories":[{"name":"-java基础","slug":"java基础","permalink":"http://39.99.158.50/categories/java基础/"},{"name":"-hexo","slug":"hexo","permalink":"http://39.99.158.50/categories/hexo/"}],"tags":[{"name":"-java","slug":"java","permalink":"http://39.99.158.50/tags/java/"},{"name":"-博客","slug":"博客","permalink":"http://39.99.158.50/tags/博客/"}]}